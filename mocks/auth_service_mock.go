// Code generated by MockGen. DO NOT EDIT.
// Source: auth_service_interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	models "sms/models"

	gomock "github.com/golang/mock/gomock"
)

// MockAuthServiceI is a mock of AuthServiceI interface.
type MockAuthServiceI struct {
	ctrl     *gomock.Controller
	recorder *MockAuthServiceIMockRecorder
}

// MockAuthServiceIMockRecorder is the mock recorder for MockAuthServiceI.
type MockAuthServiceIMockRecorder struct {
	mock *MockAuthServiceI
}

// NewMockAuthServiceI creates a new mock instance.
func NewMockAuthServiceI(ctrl *gomock.Controller) *MockAuthServiceI {
	mock := &MockAuthServiceI{ctrl: ctrl}
	mock.recorder = &MockAuthServiceIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthServiceI) EXPECT() *MockAuthServiceIMockRecorder {
	return m.recorder
}

// Signup mocks base method.
func (m *MockAuthServiceI) Signup(ctx context.Context, name, email, password string) (models.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Signup", ctx, name, email, password)
	ret0, _ := ret[0].(models.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Signup indicates an expected call of Signup.
func (mr *MockAuthServiceIMockRecorder) Signup(ctx, name, email, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Signup", reflect.TypeOf((*MockAuthServiceI)(nil).Signup), ctx, name, email, password)
}

// ValidateLogin mocks base method.
func (m *MockAuthServiceI) ValidateLogin(ctx context.Context, email, password string) (models.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateLogin", ctx, email, password)
	ret0, _ := ret[0].(models.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateLogin indicates an expected call of ValidateLogin.
func (mr *MockAuthServiceIMockRecorder) ValidateLogin(ctx, email, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateLogin", reflect.TypeOf((*MockAuthServiceI)(nil).ValidateLogin), ctx, email, password)
}
